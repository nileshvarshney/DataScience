pred <- predict(train.model, newdata = titanic.test.clean, type = "class")
#my_solution <- data.frame(PassengerId = test2$PassengerId, Survived = my_prediction)
#nrow(my_solution)
pred
str(pred)
head(pred)
head(titanic.test.clean)
titanic.train <- read.csv("train.csv")
titanic.test <- read.csv(("test.csv"))
test <- titanic.test
test$Survived <- NA
test1 <- test %>% select(PassengerId,Survived,Pclass:Embarked)
titanic.full <- rbind(titanic.train,test1)
rm(test1)
rm(test)
summary(titanic.full)
titanic.full$Fare <- ifelse(is.na(titanic.full$Fare),
mean(titanic.full$Fare,na.rm = TRUE),
titanic.full$Fare)
titanic.full$Age <- ifelse(
is.na(titanic.full$Age),
median(titanic.full$Age,na.rm = TRUE),
titanic.full$Age
)
titanic.full$SibSp <- ifelse(titanic.full$SibSp > 0, 1,0)
titanic.full$Parch <- ifelse(titanic.full$Parch > 0, 1,0)
titanic.full$Family <- ifelse((titanic.full$Parch + titanic.full$SibSp) > 0,1,0)
titanic.full <- subset(titanic.full,select = -c(SibSp,Parch,Name))
titanic.full$Cabin <-substr(titanic.full$Cabin,1,1)
titanic.full$Cabin <-ifelse(titanic.full$Cabin =='',"X",titanic.full$Cabin)  # No Cabin (X)
titanic.full$Embarked <-as.factor(ifelse(as.character(titanic.full$Embarked) =="","S",as.character(titanic.full$Embarked)))
titanic.train <- read.csv("train.csv")
titanic.test <- read.csv(("test.csv"))
library(dplyr)
titanic.train <- read.csv("train.csv")
titanic.test <- read.csv(("test.csv"))
test <- titanic.test
test$Survived <- NA
test1 <- test %>% select(PassengerId,Survived,Pclass:Embarked)
titanic.full <- rbind(titanic.train,test1)
rm(test1)
rm(test)
summary(titanic.full)
titanic.full$Fare <- ifelse(is.na(titanic.full$Fare),
mean(titanic.full$Fare,na.rm = TRUE),
titanic.full$Fare)
titanic.full$Age <- ifelse(
is.na(titanic.full$Age),
median(titanic.full$Age,na.rm = TRUE),
titanic.full$Age
)
titanic.full$SibSp <- ifelse(titanic.full$SibSp > 0, 1,0)
titanic.full$Parch <- ifelse(titanic.full$Parch > 0, 1,0)
titanic.full$Family <- ifelse((titanic.full$Parch + titanic.full$SibSp) > 0,1,0)
titanic.full <- subset(titanic.full,select = -c(SibSp,Parch,Name))
titanic.full$Cabin <-substr(titanic.full$Cabin,1,1)
titanic.full$Cabin <-ifelse(titanic.full$Cabin =='',"X",titanic.full$Cabin)  # No Cabin (X)
titanic.full$Embarked <-as.factor(ifelse(as.character(titanic.full$Embarked) =="","S",as.character(titanic.full$Embarked)))
summary(titanic.full)
str(titanic.full)
titanic.full$SibSp <- ifelse(titanic.full$SibSp > 0, 1,0)
titanic.full$Age <- ifelse(
is.na(titanic.full$Age),
median(titanic.full$Age,na.rm = TRUE),
titanic.full$Age
)
titanic.full$SibSp <- ifelse(titanic.full$SibSp > 0, 1,0)
library(dplyr)
titanic.train <- read.csv("train.csv")
titanic.test <- read.csv(("test.csv"))
test <- titanic.test
test$Survived <- NA
test1 <- test %>% select(PassengerId,Survived,Pclass:Embarked)
titanic.full <- rbind(titanic.train,test1)
rm(test1)
rm(test)
summary(titanic.full)
titanic.full$Fare <- ifelse(is.na(titanic.full$Fare),
mean(titanic.full$Fare,na.rm = TRUE),
titanic.full$Fare)
titanic.full$Age <- ifelse(
is.na(titanic.full$Age),
median(titanic.full$Age,na.rm = TRUE),
titanic.full$Age
)
titanic.full$SibSp <- ifelse(titanic.full$SibSp > 0, 1,0)
titanic.full$Parch <- ifelse(titanic.full$Parch > 0, 1,0)
titanic.full$Family <- ifelse((titanic.full$Parch + titanic.full$SibSp) > 0,1,0)
titanic.full <- subset(titanic.full,select = -c(SibSp,Parch,Name))
titanic.full$Cabin <-substr(titanic.full$Cabin,1,1)
titanic.full$Cabin <-ifelse(titanic.full$Cabin =='',"X",titanic.full$Cabin)  # No Cabin (X)
titanic.full$Embarked <-as.factor(ifelse(as.character(titanic.full$Embarked) =="","S",as.character(titanic.full$Embarked)))
titanic.train.clean <- titanic.full[1:891,]
titanic.test.clean <- titanic.full[892:1309,]
titanic.test.clean <- titanic.test.clean[,!(names(titanic.test.clean) %in% c("Survived"))]
titanic.train.clean <- titanic.full[1:891,]
titanic.test.clean <- titanic.full[892:1309,]
titanic.test.clean <- titanic.test.clean[,!(names(titanic.test.clean) %in% c("Survived"))]
model.c50 <- train( default ~ ., data = train.set, method = "C5.0")
setwd("~/Google Drive/Gits/DataScience/Models/Credit")
library(ggplot2)
## Read CSV file
credit <- read.csv("credit.csv")
str(credit)
## Exploratory Data Analysis
table(credit$checking_balance)
table(credit$credit_history)
table(credit$other_credit)
table(credit$housing)
table(credit$job)
table(credit$phone)
table(credit$default)
summary(credit$months_loan_duration)
# Plots
ggplot(data = credit) +
geom_histogram(aes(months_loan_duration) , fill = "blue") +
scale_x_continuous(name = "Loan Duration (Months)",
breaks = seq(0,72,3),
limits = c(0,72)) +
scale_y_continuous(name = "No of Loan Accounts") +
ggtitle("Loan Month Duration Counts")
ggplot(data = credit) +
geom_histogram(aes(amount) , fill = "orange",binwidth = 100) +
scale_x_continuous(name = "Loan Amount",
breaks = seq(0,15000,1000),
limits = c(0,15000)) +
scale_y_continuous(name = "No of Loan Accounts") +
ggtitle("Loan Amount wise Counts")
ggplot(data = credit,aes(age,amount)) +
geom_point(alpha = 1/5) +
xlim(18,quantile(credit$age,0.99)) +
ylim(0,quantile(credit$amount,0.99)) +
xlab("Age") +
ylab(" Loan Amount") +
ggtitle("Age Wise Loan excludes top 1% from age and amounts")
set.seed(123)
train.sample = sample(1000,900)
train.set <- credit[train.sample,]
test.set <- credit[-train.sample,]
prop.table(table(train.set$default))  ## training set propotion
prop.table(table(test.set$default))  ## test set propotion
#-----------------------------------------------------------------------
# Build Model on training set of data using Decision Tree Package C5.0
#-----------------------------------------------------------------------
# Implementing Decision tree through Carat Package which will internally use C5.0 Package
library(caret)
# modelLookup("C5.0")
model.c50 <- train( default ~ ., data = train.set, method = "C5.0")
model.c50
set seed(2017)
model.c50 <- train( default ~ ., data = train.set, method = "C5.0")
set.seed(2017)
model.c50 <- train( default ~ ., data = train.set, method = "C5.0")
summary(model.c50)
model.c50
predict.c50 <- predict(model.c50, test.set)
table(predict.c50,test.set$default)
table(predict.c50,credit$default)
predict.c50 <- predict(model.c50, credit)
table(predict.c50,credit$default)
predict.c50 <- predict(model.c50, test.set)
table(predict.c50,test.set$default)
head(predict(model.c50, test.set,type = "prob"))
head(test.set$default)
ctrl <- trainControl(
method = "cv",     # k-fold validation
number = 10,      # 10 folds
selectionFunction = "oneSE"
)
grid <- expand.grid(
model = "tree",
trials = c(1,5,10,15,20,25,30,35),
winnow = "FALSE"
)
grid
set.seed(2017)
set.seed(2017)
model.c50.custon <- train(default ~ .,
data = train.set,
method = "C5.0",
metric = "Kappa",
trControl = ctrl,
tuneGrid = grid)
model.c50.custon
predict.c50.custon <- predict(model.c50.custon, test.set)
table(predict.c50.custon,test.set$default)
head(predict(model.c50.custon, test.set,type = "prob"))
head(test.set$default)
ls()
install.packages("ipred")
# install.packages("ipred")
library(ipred)
set.seed(2017)
mybag <- bagging(default ~ ., data = train.set, nbagg = 25)
mybag
mybag$mtrees
mybag$OOB
mybag$comb
mybag$call
bagging_pred <- predict(mybag, test.set)
table(bagging_pred,test.set$default)
set.seed(2017)
ctrl <- trainControl(
method = "cv",
number = 10
)
bagging_carat <- train(
default ~., data = train.set,
method = "treebag",
trControl = ctrl
)
pred_bagging_carat <- predict(bagging_carat, test.set)
table(pred_bagging_carat,test.set$default)
bagging_carat
str(svmBag)
svmBag$fit()
svmBag$fit
rm(list = ls())
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
titanic <- read.csv("train.csv")
libray(carat)
libray(caret)
library(caret)
str(titanic)
titanic <- titanic[,-"PassengerId"]
titanic <- titanic[,-PassengerId]
titanic <- titanic[-PassengerId]
titanic <- titanic[,-PassengerId]
titanic[titanic]
titanic[,PassengerId]
titanic <- subset(titanic,select = -PassengerId)
str(titanic)
table(titanic$Pclass)
titanic <- subset(titanic, select = -Name)
str(titanic)
titanic <- subset(titanic, select = -Ticket)
str(titanic)
table(titanic$Sex)
table(titanic$Age)
summary(age)
summary(titanic$Age)
mean(titanic$Age,na.rm = TRUE)
round(mean(titanic$Age,na.rm = TRUE))
mean_age <- round(mean(titanic$Age,na.rm = TRUE))
ifelse(is.na(titanic$Age),mean_age,titanic$Age)
summary(titanic$Age)
summary(titanic$Age)
View(titanic)
is.na(titanic$Age)
ifelse(is.na(titanic$Age),mean_age,titanic$Age)
summry(titanic$Age)
summary(titanic$Age)
titanic$Age <- ifelse(is.na(titanic$Age),mean_age,titanic$Age)
summary(titanic$Age)
str(titanic)
table(titanic$SibSp)
table(titanic$Parch)
titanic$SibSp <- ifelse(titanic$SibSp > 0, 1,0)
titanic$Parch <- ifelse(titanic$Parch > 0, 1,0)
titanic$Family <- titanic$SibSp + titanic$Parch
titanic$Family <- ifelse(titanic$Family > 0,1,0)
titanic <- subset(titanic, select = -SibSp)
titanic <- subset(titanic, select = -Parch)
str(titanic)
head(titanic$Cabin)
table(titanic$Cabin)
?substr
substr(titanic$Cabin,1,1)
titanic$Cabin <-   substr(titanic$Cabin,1,1)
summary(titanic$Cabin)
table(titanic$Cabin)
is.na(titanic$Cabin)
titanic$Cabin <- ifelse(titanic$Cabin =='','X',titanic$Cabin)
summary(titanic$Cabin)
table(titanic$Cabin)
str(titanic)
table(titanic$Embarked)
titanic$Embarked <- ifelse(titanic$Embarked == '','S',titanic$Embarked)
table(titanic$Embarked)
table(titanic$Embarked)
table(titanic$Cabin)
library(caret)
# Set Working directory and import dataset
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
titanic <- read.csv("train.csv")
# Exploratory data analysis
str(titanic)
# Remove Unnecessary Variables
titanic <- subset(titanic,select = -PassengerId)  # removed passanger Ids
titanic <- subset(titanic, select = -Name) # Removed Name
titanic <- subset(titanic, select = -Ticket) # Removed Ticket
# Replace All Missing Age with mean value of age
mean_age <- round(mean(titanic$Age,na.rm = TRUE))
titanic$Age <- ifelse(is.na(titanic$Age),mean_age,titanic$Age)
# Merge SibSp and Parch with family indicator
titanic$SibSp <- ifelse(titanic$SibSp > 0, 1,0)
titanic$Parch <- ifelse(titanic$Parch > 0, 1,0)
titanic$Family <- titanic$SibSp + titanic$Parch
titanic$Family <- ifelse(titanic$Family > 0,1,0)
titanic <- subset(titanic, select = -SibSp)
titanic <- subset(titanic, select = -Parch)
# Clean data for Cabin by  taking first char of the Cabin to Indetify cabin class
titanic$Cabin <-   substr(titanic$Cabin,1,1) # 687 passange with no cabin onformation
# Assign dummy cabin 'x' for whom cabin data is not present
titanic$Cabin <- ifelse(titanic$Cabin =='','X',titanic$Cabin)
# There are couple of passange have no Embarked information. Let consider than 'S' as most of the passage started from this Embarked
titanic.full$Embarked <-as.factor(ifelse(as.character(titanic.full$Embarked) =="","S",as.character(titanic.full$Embarked)))
library(caret)
# Set Working directory and import dataset
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
titanic <- read.csv("train.csv")
# Exploratory data analysis
str(titanic)
# Remove Unnecessary Variables
titanic <- subset(titanic,select = -PassengerId)  # removed passanger Ids
titanic <- subset(titanic, select = -Name) # Removed Name
titanic <- subset(titanic, select = -Ticket) # Removed Ticket
# Replace All Missing Age with mean value of age
mean_age <- round(mean(titanic$Age,na.rm = TRUE))
titanic$Age <- ifelse(is.na(titanic$Age),mean_age,titanic$Age)
# Merge SibSp and Parch with family indicator
titanic$SibSp <- ifelse(titanic$SibSp > 0, 1,0)
titanic$Parch <- ifelse(titanic$Parch > 0, 1,0)
titanic$Family <- titanic$SibSp + titanic$Parch
titanic$Family <- ifelse(titanic$Family > 0,1,0)
titanic <- subset(titanic, select = -SibSp)
titanic <- subset(titanic, select = -Parch)
# Clean data for Cabin by  taking first char of the Cabin to Indetify cabin class
titanic$Cabin <-   substr(titanic$Cabin,1,1) # 687 passange with no cabin onformation
# Assign dummy cabin 'x' for whom cabin data is not present
titanic$Cabin <- ifelse(titanic$Cabin =='','X',titanic$Cabin)
table(titanic$Embarked)
titanic.full$Embarked <-as.factor(ifelse(as.character(titanic.full$Embarked) =="","S",as.character(titanic.full$Embarked)))
titanic$Embarked <-as.factor(ifelse(as.character(titanic$Embarked) =="","S",as.character(titanic$Embarked)))
table(titanic$Embarked)
str(titanic)
str(titanic)
table(titanic$Sex)
?scale
scale(titanic$Pclass)
t <- dummyVars(survived ~ ., data = titanic)
library(dummies)
install.packages("dummies")
library(dummies)
dummy(titanic$Sex
)
str(titanic)
head() dummy(titanic$Pclass))
head( dummy(titanic$Pclass))
Pclass <- dummy(titanic$Pclass)
Pclass
Sex <- dummy(titanic$Sex)
Embarked <- dummy(titanic$Embarked)
Cabin <- dummy(titanic$Cabin)
cbind(titanic,Pclass)
titanic <- cbind(titanic,Cabin)
titanic <- cbind(titanic,Embarked)
str(titanic)
titanic <- subset(titanic, select = -c(Embarked,Sex,Cabin,Embarked))
str(titanic)
library(psych)
pairs.panels(titanic)
model.logist <- glm(Survived ~ .,data = titanic)
model.logist
summary(model.logist)
titanic <- subset(titanic, select = -c(Pclass,Sex,Cabin,Embarked))
pairs.panels(titanic)
model.logist <- glm(Survived ~ .,data = titanic)
str(titanic)
# Set Working directory and import dataset
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
titanic <- read.csv("train.csv")
# Exploratory data analysis
str(titanic)
# Remove Unnecessary Variables
titanic <- subset(titanic,select = -PassengerId)  # removed passanger Ids
titanic <- subset(titanic, select = -Name) # Removed Name
titanic <- subset(titanic, select = -Ticket) # Removed Ticket
# Replace All Missing Age with mean value of age
mean_age <- round(mean(titanic$Age,na.rm = TRUE))
titanic$Age <- ifelse(is.na(titanic$Age),mean_age,titanic$Age)
# Merge SibSp and Parch with family indicator
titanic$SibSp <- ifelse(titanic$SibSp > 0, 1,0)
titanic$Parch <- ifelse(titanic$Parch > 0, 1,0)
titanic$Family <- titanic$SibSp + titanic$Parch
titanic$Family <- ifelse(titanic$Family > 0,1,0)
titanic <- subset(titanic, select = -SibSp)
titanic <- subset(titanic, select = -Parch)
# Clean data for Cabin by  taking first char of the Cabin to Indetify cabin class
titanic$Cabin <-   substr(titanic$Cabin,1,1) # 687 passange with no cabin onformation
# Assign dummy cabin 'x' for whom cabin data is not present
titanic$Cabin <- ifelse(titanic$Cabin =='','X',titanic$Cabin)
# There are couple of passange have no Embarked information. Let consider than 'S' as most of the passage started from this Embarked
titanic$Embarked <-as.factor(ifelse(as.character(titanic$Embarked) =="","S",as.character(titanic$Embarked)))
# Add dummy variable for Pclass, Sex, Cabin and Embarked
Pclass <- dummy(titanic$Pclass)
Sex <- dummy(titanic$Sex)
Cabin <- dummy(titanic$Cabin)
Embarked <- dummy(titanic$Embarked)
titanic <- cbind(titanic,Pclass)
titanic <- cbind(titanic,Sex)
titanic <- cbind(titanic,Cabin)
titanic <- cbind(titanic,Embarked)
titanic <- subset(titanic, select = -c(Pclass,Sex,Cabin,Embarked))
# -------------------------------------------------------------------------------
# Correlation Plot
# -------------------------------------------------------------------------------
pairs.panels(titanic)
str(titanic)
model.logist <- glm(Survived ~ .,data = titanic)
summary(model.logist)
model.logist <- glm(Survived ~ .,data = titanic, method = "logit")
model.logist <- glm(Survived ~ .,data = titanic, family=binomial(link='logit'))
summary(model.logist)
# -----------------------------------------------------------
# Logistic Regression Approach on Titanic data
# -----------------------------------------------------------
# Inlcude required Library
library(caret)
library(dummies)
library(psych)
# Set Working directory and import dataset
setwd("~/Google Drive/Gits/DataScience/Models/Titanic")
titanic <- read.csv("train.csv")
# Exploratory data analysis
str(titanic)
# Remove Unnecessary Variables
titanic <- subset(titanic,select = -PassengerId)  # removed passanger Ids
titanic <- subset(titanic, select = -Name) # Removed Name
titanic <- subset(titanic, select = -Ticket) # Removed Ticket
# Replace All Missing Age with mean value of age
mean_age <- round(mean(titanic$Age,na.rm = TRUE))
titanic$Age <- ifelse(is.na(titanic$Age),mean_age,titanic$Age)
# Merge SibSp and Parch with family indicator
titanic$SibSp <- ifelse(titanic$SibSp > 0, 1,0)
titanic$Parch <- ifelse(titanic$Parch > 0, 1,0)
titanic$Family <- titanic$SibSp + titanic$Parch
titanic$Family <- ifelse(titanic$Family > 0,1,0)
titanic <- subset(titanic, select = -SibSp)
titanic <- subset(titanic, select = -Parch)
# Clean data for Cabin by  taking first char of the Cabin to Indetify cabin class
titanic$Cabin <-   substr(titanic$Cabin,1,1) # 687 passange with no cabin onformation
# Assign dummy cabin 'x' for whom cabin data is not present
titanic$Cabin <- ifelse(titanic$Cabin =='','X',titanic$Cabin)
# There are couple of passange have no Embarked information. Let consider than 'S' as most of the passage started from this Embarked
titanic$Embarked <-as.factor(ifelse(as.character(titanic$Embarked) =="","S",as.character(titanic$Embarked)))
# Add dummy variable for Pclass, Sex, Cabin and Embarked
# Pclass <- dummy(titanic$Pclass)
# Sex <- dummy(titanic$Sex)
# Cabin <- dummy(titanic$Cabin)
# Embarked <- dummy(titanic$Embarked)
#
# titanic <- cbind(titanic,Pclass)
# titanic <- cbind(titanic,Sex)
# titanic <- cbind(titanic,Cabin)
# titanic <- cbind(titanic,Embarked)
#
# titanic <- subset(titanic, select = -c(Pclass,Sex,Cabin,Embarked))
# -------------------------------------------------------------------------------
# Correlation Plot
# -------------------------------------------------------------------------------
pairs.panels(titanic)
model.logist <- glm(Survived ~ .,data = titanic, family=binomial(link='logit'))
summary(model.logist)
model.logist <- glm(Survived ~ .,data = titanic, family=binomial(link='logit'))
summary(model.logist)
str(titanic)
rm(model.logist)
model.logist <- glm(Survived ~ .,data = titanic, family=binomial(link='logit'))
summary(model.logist
)
str(titanic)
model.logist <- train(Survived ~ ., data = titanic, method = "vglmAdjCat")
model.logist <- train(Survived ~ ., data = titanic, method = "LogicReg")
model.logist <- train(Survived ~ ., data = titanic, method = "logreg")
model.logist <- train(Survived ~ ., data = titanic, method = "logreg")
model.logist <- glm(Survived ~ ., data = titanic,family = binomial("logit"))
summary(model.logist)
ggplot(data = titanic) +
geom_boxplot(aes(Survived, fill = Pclass))
ggplot(data = titanic) +
geom_boxplot(aes(Survived))
ggplot(data = titanic) +
geom_boxplot(aes(Pclass))
ggplot(data = titanic) +
geom_boxplot(aes(x =Pclass))
ggplot(data = titanic) +
geom_boxplot(aes(x =Pclass,y = Survived))
boxplot(titanic$Survived)
ggplot(data = titanic) +
geom_histogram(aes(x =Pclass,y = Survived))
ggplot(data = titanic) +
geom_histogram(aes(x =Pclass,y = Survived))
ggplot(data = titanic) +
geom_histogram(aes(y = Survived))
ggplot(data = titanic) +
geom_histogram(aes(y = Survived))
ggplot(data = titanic) +
geom_histogram(aes(y = Fair))
ggplot(data = titanic) +
geom_histogram(aes(y = Pclass))
ggplot(data = titanic) +
geom_histogram(aes(y = Pclass))
ggplot(data = titanic) +
geom_histogram(aes(Pclass))
ggplot(data = titanic) +
geom_histogram(aes(Pclass,fill = Survived))
ggplot(data = titanic) +
geom_histogram(aes(Pclass,color = Survived))
ggplot(data = titanic) +
geom_boxplot(aes(Pclass,color = Survived))
