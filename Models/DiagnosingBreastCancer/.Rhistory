credit.clean <- subset(credit.clean, credit.clean$A2 != as.character("?"))
summary(credit.clean)
credit <- read.table(
file = url,sep = ",",stringsAsFactors = TRUE)
names(credit) = c("A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15","Class")
credit.clean <- subset(credit, credit$A1 != as.character("?"))
summary(credit.clean)
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
summary(credit.clean)
data.summary <- df_status(credit)
credit.clean <- ifelse(credit.clean$Class == "+","Positive","Negative")
summary(credit.clean)
credit.clean <- subset(credit, credit$A1 != as.character("?"))
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
credit.clean$Class <- ifelse(credit.clean$Class == "+","Positive","Negative")
summary(credit.clean)
View(credit.clean)
data.summary <- df_status(credit.clean)
summary(credit.clean)
cross_A1=cross_plot(credit.clean, str_input="A1", str_target="Class")
cross_A4=cross_plot(credit.clean, str_input="A4", str_target="Class")
cross_A5=cross_plot(credit.clean, str_input="A5", str_target="Class")
cross_A6=cross_plot(credit.clean, str_input="A6", str_target="Class")
unique(credit.clean$A6)
table(credit.clean$A6)
credit.clean <- subset(credit.clean, credit.clean$A6 != as.character("?"))
table(credit.clean$A6)
credit.clean <- subset(credit.clean, credit.clean$A6 != as.character("?"))
cross_A6=cross_plot(credit.clean, str_input="A6", str_target="Class")
table(credit.clean$A7)
cross_A7=cross_plot(credit.clean, str_input="A7", str_target="Class")
cross_A9=cross_plot(credit.clean, str_input="A9", str_target="Class")
cross_A10=cross_plot(credit.clean, str_input="A10", str_target="Class")
cross_A12=cross_plot(credit.clean, str_input="A12", str_target="Class")
cross_A13=cross_plot(credit.clean, str_input="A13", str_target="Class")
summary(credit.clean)
credit.clean$Class <- as.factor(credit.clean$Class)
summary(credit.clean)
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram()
str(credit.clean)
credit.clean$A2 <- as.integer(credit.clean$A2)
credit.clean$A2 <- as.double(credit.clean$A2)
credit.clean <- subset(credit, credit$A1 != as.character("?"))
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
credit.clean$Class <- ifelse(credit.clean$Class == "+","Positive","Negative")
credit.clean$Class <- as.factor(credit.clean$Class)
credit.clean$A2 <- as.double(credit.clean$A2)
credit <- read.table(
file = url,sep = ",",stringsAsFactors = FALSE)
names(credit) = c("A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15","Class")
credit.clean <- subset(credit, credit$A1 != as.character("?"))
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
credit.clean$Class <- ifelse(credit.clean$Class == "+","Positive","Negative")
credit.clean$Class <- as.factor(credit.clean$Class)
credit.clean$A2 <- as.double(credit.clean$A2)
str(credit.clean)
credit.clean$A1 <- as.factor(credit.clean$A1)
str(credit.clean)
credit.clean$A4 <- as.factor(credit.clean$A4)
credit.clean$A5 <- as.factor(credit.clean$A5)
credit.clean$A6 <- as.factor(credit.clean$A6)
credit.clean$A7 <- as.factor(credit.clean$A7)
str(credit.clean)
credit.clean$A9 <- as.factor(credit.clean$A9)
credit.clean$A10 <- as.factor(credit.clean$A10)
credit.clean$A12 <- as.factor(credit.clean$A12)
credit.clean$A13 <- as.factor(credit.clean$A13)
str(credit.clean)
credit.clean <- subset(credit, credit$A1 != as.character("?"))
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
credit.clean$Class <- ifelse(credit.clean$Class == "+","Positive","Negative")
credit.clean$Class <- as.factor(credit.clean$Class)
credit.clean$A1 <- as.factor(credit.clean$A1)
credit.clean$A4 <- as.factor(credit.clean$A4)
credit.clean$A5 <- as.factor(credit.clean$A5)
credit.clean$A6 <- as.factor(credit.clean$A6)
credit.clean$A7 <- as.factor(credit.clean$A7)
credit.clean$A9 <- as.factor(credit.clean$A9)
credit.clean$A10 <- as.factor(credit.clean$A10)
credit.clean$A12 <- as.factor(credit.clean$A12)
credit.clean$A13 <- as.factor(credit.clean$A13)
str(credit.clean)
credit.clean <- subset(credit, credit$A1 != as.character("?"))
credit.clean <- subset(credit.clean, credit.clean$A4 != as.character("?"))
credit.clean$Class <- ifelse(credit.clean$Class == "+","Positive","Negative")
credit.clean$Class <- as.factor(credit.clean$Class)
credit.clean$A1 <- as.factor(credit.clean$A1)
credit.clean$A2 <- as.double(credit.clean$A2)
credit.clean$A4 <- as.factor(credit.clean$A4)
credit.clean$A5 <- as.factor(credit.clean$A5)
credit.clean$A6 <- as.factor(credit.clean$A6)
credit.clean$A7 <- as.factor(credit.clean$A7)
credit.clean$A9 <- as.factor(credit.clean$A9)
credit.clean$A10 <- as.factor(credit.clean$A10)
credit.clean$A12 <- as.factor(credit.clean$A12)
credit.clean$A13 <- as.factor(credit.clean$A13)
summary(credit.clean)
data.summary <- df_status(credit.clean)
summary(credit.clean)
cross_A1=cross_plot(credit.clean, str_input="A1", str_target="Class")
# A1 impact is not much on credit Class
cross_A4=cross_plot(credit.clean, str_input="A4", str_target="Class")
# A4 - There are only 2 observation of A4 - I, both these observation belongs to positiove.
# A4 - u observation ratio is almost equal to Class ratio and same for A4 - y. Seems that this variable has no impact on classification
cross_A5=cross_plot(credit.clean, str_input="A5", str_target="Class")
# Seems variable A4 and A5 are duplicating with different value. These are good cindidate for delete.
# Get rid off from unknow value observation for A6
credit.clean <- subset(credit.clean, credit.clean$A6 != as.character("?"))
cross_A6=cross_plot(credit.clean, str_input="A6", str_target="Class")
# this attributes has lot of variation, seems good condidate for model(***)
cross_A7=cross_plot(credit.clean, str_input="A7", str_target="Class")
# seems there is no impact of feature on credit class
cross_A9=cross_plot(credit.clean, str_input="A9", str_target="Class")
# seems there is no impact of feature on credit class
cross_A10=cross_plot(credit.clean, str_input="A10", str_target="Class")
# seems there is no impact of feature on credit class
cross_A12=cross_plot(credit.clean, str_input="A12", str_target="Class")
# seems there is no impact of feature on credit class
cross_A13=cross_plot(credit.clean, str_input="A13", str_target="Class")
# seems there is no impact of feature on credit class
str(credit.clean)
table(credit.clean$A14)
credit.clean$A14 <- as.integer(credit.clean$A14)
str(credit.clean)
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram()
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = "Class"))
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = "Class")) +
facet_wrap(aes(fill = "Class"))
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class))
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class)) +
facet_wrap(aes(fill = Class))
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class)) +
facet_wrap(Class)
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class)) +
facet_wrap(credit.clean$Class)
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class)) +
facet_wrap(list(credit.clean$Class))
ggplot(data = credit.clean, aes(x = A2)) +
geom_histogram(aes(fill = Class)) +
facet_wrap(~ Class)
ggplot(data = credit.clean, aes(x = A2)) +
geom_boxplot(aes(fill = Class))
ggplot(data = credit.clean, aes(x = A2)) +
geom_boxplot()
ggplot(data = credit.clean, aes(x = Class, y = A2)) +
geom_boxplot()
ggplot(data = credit.clean, aes(x = Class, y = A2)) +
geom_boxplot(aes(color = Class))
ggplot(data = credit.clean, aes(x = Class, y = A2)) +
geom_boxplot(aes(fill = Class))
ggplot(data = credit.clean, aes(x = Class, y = A2)) +
geom_boxplot(aes(fill = Class))  +
facet_wrap( ~A6)
ggplot(data = credit.clean, aes(x = Class, y = A3)) +
geom_boxplot(aes(fill = Class))  +
facet_wrap( ~A6)
ggplot(data = credit.clean, aes(x = Class, y = A8)) +
geom_boxplot(aes(fill = Class))  +
facet_wrap( ~A6)
ggplot(data = credit.clean, aes(x = Class, y = A14)) +
geom_boxplot(aes(fill = Class))  +
facet_wrap( ~A6)
ggplot(data = credit.clean, aes(x = Class, y = A15)) +
geom_boxplot(aes(fill = Class))  +
facet_wrap( ~A6)
set.seed(100)
x <- rnorm(50, mean = 10, sd = 0.5)
t.test(x, mu=10)
car1 <- cars1 <- cars[1:30, ]
car1
car_outlier <- data.frame(speed = c(19,19,20,21,20), dist=c(190, 186, 210, 220, 218))
car2 < rbind(car1,car_outlier)
car2 <- rbind(car1,car_outlier)
plot(car1$speed,car1$dist)
plot(car1$speed,car1$dist)
abline(lm(dist ~ speed, data = car1))
abline(lm(dist ~ speed, data = car1,col= "blue"))
abline(lm(dist ~ speed, data = car1),col= "blue"))
abline(lm(dist ~ speed, data = car1),col= "blue")
abline(lm(dist ~ speed, data = car1),col= "blue",lwd = 3)
abline(lm(dist ~ speed, data = car1),col= "blue",lwd = 3,lty = 2)
abline(lm(dist ~ speed, data = car1),col= "blue",lwd = 3,lty = 2)
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red")
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3)
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(lm(dist ~ speed,data = car1))
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(lm(car1$dist ~ car1$speed))
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(lm(dist ~ speed),data = car1)
fit1 <- lm(dist ~ speed),data = car1)
car1 <- cars1 <- cars[1:30, ]
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(lm(dist ~ speed,data = car1)
)
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(fit1)
fit1 <- lm(dist ~ speed,data = car1)
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(fit1)
ggplot(data = car1) +
geom_point(aes(x = speed, y = dist),color = "red",size = 3) +
geom_abline(aes(dist ~ speed))
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3)
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth()
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm")
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm",color = "blue",linetype="2")
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm",color = "blue",linetype="dashed")
ggplot(data = car2,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm",color = "blue",linetype="dashed")
ggplot(data = car2,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm",color = "blue",linetype="dashed") +
ggtitle("Plot with outliers")
ggplot(data = car1,aes(x = speed, y = dist)) +
geom_point(color = "red",size = 3) +
geom_smooth(method = "lm",color = "blue",linetype="dashed") +
ggtitle("Plot without outliers")
boxplot(car1$speed)
boxplot(car2$speed)
boxplot(car2$dist)
boxplot.stat(car2$dist)
boxplot.stats(car2$dist)
boxplot.stats(car2$dist)$out
Outliers_value <- boxplot.stats(car2$dist)$out
Outliers_value
boxplot.stats(mtcars$mpg)$out
boxplot.stats(mtcars$wt)$out
boxplot(mtcars$wt)
outlier_value <- boxplot.stats(mtcars$wt)$out
outlier_value
mtcars
str(mtcars)
airquality
boxplot(wt ~ cyl, data = mtcars)
boxplot.stats(wt ~ cyl, data = mtcars)
mod <- lm(mpg ~ . data= mtcars)
model.lm <- lm(mpg ~ ., data= mtcars)
cooks.distance(model.lm)
cooks.distance(model.lm)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")
cooksd <- cooks.distance(model.lm)
cooksd
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")
abline(h = 4*mean(cooksd, na.rm=T), col="red")
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")
names(cooksd)
mean(cooksd)
mean(cooksd,na.rm = T)
4 * mean(cooksd,na.rm = T)
cooksd > 4 * mean(cooksd,na.rm = T)
[cooksd > 4 * mean(cooksd,na.rm = T)]
cooksd[cooksd > 4 * mean(cooksd,na.rm = T)]
names(cooksd)[cooksd > 4 * mean(cooksd,na.rm = T)]
as.numeric((names(cooksd)[cooksd > 4 * mean(cooksd,na.rm = T)])
)
influential <- names(cooksd)[(cooksd > 4*mean(cooksd, na.rm=T))]
influential
car::outlier.test(mtcars)
car::outlierTest(mtcars)
car::outlierTest(mtcars$wt)
head(mtcars[influential,])
car::outlierTest(model.lm)
outliers::outlier(mtcars$wt)
plot(model.lm)
mtcars
outliers::outlier(mtcars$mpg)
outliers::outlier(mtcars$qsec)
outliers::outlier(mtcars$cyl)
outliers::outlier(mtcars$hp)
ggplot(mtcars,aes(mpg))
ggplot(mpg)
ggplot(mtcars$mpg)
gg  <- ggplot(mtcars,aes(mpg))
gg + geom_area()
gg + geom_area(stat = "bin")
gg + geom_hist(stat = "bin")
gg + geom_histogram(stat = "bin")
gg + geom_density()
gg + geom_dotplot()
gg  <- ggplot(mtcars,aes(cyl))
gg + geom_bar()
gg + geom_bar() + scale_x_discrete(breaks = seq(1,10,1))
gg + geom_quantile()
gg  <- ggplot(mtcars,aes(mpg))
gg + geom_quantile()
gg  <- ggplot(mtcars,aes(mpg,wt))
gg
gg + geom_point()
gg + geom_rug()
gg + geom_point()
gg + geom_point() + theme_bw()
gg + geom_point() + theme_light()
gg + geom_point() + theme_classic()
dplyr::tbl_df(iris)
head(iris)
dplyr::glimpse(iris)
utils::view(iris)
utils::View(iris)
set.seed(7)
install.packages("mlbench")
library(mlbench)
library(caret)
diabeties <- PimaIndianDiabeties
data()
diabeties <- PimaIndiansDiabetes
diabeties <- data(PimaIndiansDiabetes)
diabeties
library(mlbench)
diabeties <- data(PimaIndiansDiabetes)
diabeties
data(PimaIndiansDiabetes)
PimaIndiansDiabetes
diabeties <-PimaIndiansDiabetes
diabeties
head(diabeties)
cor(diabeties[,1:8])
correlationMatrix <- cor(diabeties[,1:8])
correlationMatrix
print(correlationMatrix)
print(correlationMatrix)
highlyCorrelated <- findCorrelation(correlationMatrix,cutoff = 0.75)
highlyCorrelated
highlyCorrelated <- findCorrelation(correlationMatrix,cutoff = 0.5)
highlyCorrelated
highlyCorrelated
print(highlyCorrelated)
str(diabeties)
model <- train(diabetes ~ .,
data = diabeties,
method = "lvq",
preProcess = "scale",
trControl = ctrl)
ctrl <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model <- train(diabetes ~ .,
data = diabeties,
method = "lvq",
preProcess = "scale",
trControl = ctrl)
importance <- varImp(model,scale = FALSE)
print(importance)
plot(importance)
varImpPlot(model)
ctrl <- rfeControl(functions=rfFuncs, method="cv", number=10)
# run the RFE algorithm
results <- rfe(PimaIndiansDiabetes[,1:8], PimaIndiansDiabetes[,9], sizes=c(1:8), rfeControl=control)
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8), r
feControl=control
)
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8),
feControl=control
)
ctrl <- rfeControl(functions=rfFuncs, method="cv", number=10)
# run the RFE algorithm
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8),
feControl=control
)
print(results)
diabeties[,1:8]
diabeties[,9]
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8),
feControl=control
)
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8),
rfeControl=control
)
results <- rfe(diabeties[,1:8],
diabeties[,9],
sizes=c(1:8),
rfeControl=ctrl
)
print(results)
print(results)
predictors(results)
# plot the results
plot(results, type=c("g", "o"))
plot(results)
plot(results,, type=c("g"))
plot(results, type=c("o"))
plot(results, type=c("o","g"))
head(diabeties)
correlationMatrix.mtcars = cor(mtcars)
print(correlationMatrix.mtcars)
highlyCorrelated.mtcars <- findCorrelation(correlationMatrix.mtcars,cutoff = 0.5)
print(highlyCorrelated.mtcars)
highlyCorrelated.mtcars <- findCorrelation(correlationMatrix.mtcars,cutoff = 0.75)
print(highlyCorrelated.mtcars)
correlationMatrix.iris = cor(iris[,1:4])
print(correlationMatrix.iris)
highlyCorrelated.iris <- findCorrelation(correlationMatrix.iris,cutoff = 0.75)
print(highlyCorrelated.iris)
ctrl.mtcars <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model <- train(mpg ~ .,
data = mtcars,
method = "lm",
trControl = ctrl.mtcars)
model.mtcars <- train(mpg ~ .,
data = mtcars,
method = "lm",
trControl = ctrl.mtcars)
importance.mtcars <- varImp(model.mtcars,scale = FALSE)
print(importance.mtcars)
plot(importance.mtcars)
str(iris)
ctrl.iris <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model.iris <- train(Species ~ .,
data = iris,
method = "knn",
trControl = ctrl.iris)
importance.iris <- varImp(model.iris,scale = FALSE)
print(importance.iris)
plot(importance.iris)
ctrl.iris <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model.iris <- train(Species ~ .,
data = iris,
method = "C50",
trControl = ctrl.iris)
importance.iris <- varImp(model.iris,scale = FALSE)
print(importance.iris)
plot(importance.iris)
ctrl.iris <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model.iris <- train(Species ~ .,
data = iris,
method = "C50",
trControl = ctrl.iris)
importance.iris <- varImp(model.iris,scale = FALSE)
print(importance.iris)
plot(importance.iris)
ctrl.iris <- trainControl(method = "repeatedcv",number = 10,  repeats = 3)
model.iris <- train(Species ~ .,
data = iris,
method = "C5.0",
trControl = ctrl.iris)
importance.iris <- varImp(model.iris,scale = FALSE)
print(importance.iris)
plot(importance.iris)
mtcars
ctrl <- rfeControl(functions=lm, method="cv", number=10)
ctrl.mtcars <- rfeControl(functions=lm, method="cv", number=10)
results.mtcars <- rfe(mpg[,2:11],
diabeties[,1],
sizes=c(2:11),
rfeControl=ctrl.mtcars
)
ctrl.mtcars <- rfeControl(functions=lm, method="cv", number=10)
results.mtcars <- rfe(mtcars[,2:11],
mtcars[,1],
sizes=c(2:11),
rfeControl=ctrl.mtcars
)
rfeControl$function
ctrl.mtcars <- rfeControl(functions=lmFuncs, method="cv", number=10)
results.mtcars <- rfe(mtcars[,2:11],
mtcars[,1],
sizes=c(2:11),
rfeControl=ctrl.mtcars
)
print(results.mtcars)
predictors(results.mtcars)
plot(results.mtcars, type=c("o","g"))
function (caretFuncs)
)
function(caretFuncs)
)
?function
)
head(model.matrix(mpg ~ ., data = mtcars))
model.mtcars
model.mtcars$results
model.mtcars$bestTune
model.mtcars$modelInfo
model.mtcars$pred
model.mtcars$results
importance.mtcars <- varImp(model.mtcars,scale = FALSE)
print(importance.mtcars)
