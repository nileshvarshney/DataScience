diamonds
diamonds
diamonds
library(ggplot2)
diam <- diamonds
ggplot(data = diam, aes( x = x, y = price)) +
geom_point()
with(diam,cor.test(price,x)
with(diam,cor.test(price,x)
with(diam,cor.test(price,x,method = 'pearson'))
with(diam,cor.test(price,x,method = 'pearson'))
with(diam,cor.test(price,y,method = 'pearson'))
with(diam,cor.test(price,z,method = 'pearson'))
ggplot(data = diam, aes( x = x, y = price)) +
geom_point()
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point()
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point(alpha = 1/100)
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(seq(0,80,2))
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0,80,2))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point()
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99)) +
xlim (0,quantile(diam$price,0.99))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99)) +
ylim (0,quantile(diam$price,0.99))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point()
#  xlim (0,quantile(diam$carat,0.99)) +
#  ylim (0,quantile(diam$price,0.99))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99)) +
ylim (0,quantile(diam$price,0.99))
diam$volume <- (diam$x * diam$y * diam$z)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
count(diam$volume == 0)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
count(diam,volume = 0)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
count(diam,vars = volume)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
count(diam$volume==0)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
count(diam$volume==0)
with(diam, cor.test(price,volume))
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
count(diam$volume==0)
with(filter(diam,!(volume == 0|volume ==800)), cor.test(price,volume))
filter(diam,volume ==0)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(diam$volume==0)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(filter(diam,volume==0))
with(filter(diam,!(volume == 0|volume ==800)), cor.test(price,volume))
filter(diam,!(volume == 0|volume ==800))
with(filter(diam,!(volume == 0|volume ==800)),cor.test(price,volume)
)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(filter(diam,volume==0))
with(filter(diam,!(volume == 0|volume >=800)), cor.test(price,volume))
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point(alpha(1/100))
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point(alpha(1/100))
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point(alpha= 1/100)
ggplot(data = filter(diam,!(volume == 0|volume >=800)), aes( x = volume, y = price)) +
geom_point(alpha= 1/100)
ggplot(data = filter(diam,!(volume == 0|volume >=800)), aes( x = volume, y = price)) +
geom_point(alpha= 1/100) +
geom_smooth()
ggplot(data = filter(diam,!(volume == 0|volume >=800)), aes( x = volume, y = price)) +
geom_point(alpha= 1/100) +
geom_smooth(method = 'lm')
diamondsByClarity -> diamonds %.%
group_by(clarity) %.%
summarise(mean_price = mean(price),
median_price = median_price(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- diamonds %.%
group_by(clarity) %.%
summarise(mean_price = mean(price),
median_price = median_price(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median_price(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
View(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
View(diamonds_by_clarity)
View(diamonds_by_color)
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price)) +
geom_bar(stat = "identity")
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, color = clarity)) +
geom_bar(stat = "identity")
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
ggplot(data = diamonds_mp_by_color, aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
library(gridExtra)
arrange(p1,p2,nrow = 1)
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
library(gridExtra)
arrange(p1,p2,nrow = 1)
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
library(gridExtra)
grid.arrange(p1,p2,nrow = 1)
library(ggplot2)
diam <- diamonds
ggplot(data = diam, aes( x = x, y = price)) +
geom_point()
with(diam,cor.test(price,x,method = 'pearson'))
with(diam,cor.test(price,y,method = 'pearson'))
with(diam,cor.test(price,z,method = 'pearson'))
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0,80,2))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99)) +
ylim (0,quantile(diam$price,0.99))
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(filter(diam,volume==0))
with(filter(diam,!(volume == 0|volume >=800)), cor.test(price,volume))
ggplot(data = filter(diam,!(volume == 0|volume >=800)), aes( x = volume, y = price)) +
geom_point(alpha= 1/100) +
geom_smooth(method = 'lm')
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
library(gridExtra)
grid.arrange(p1,p2,nrow = 1)
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(filter(diam,volume==0))
with(filter(diam,!(volume == 0|volume >=800)), cor.test(price,volume))
library(ggplot2)
diam <- diamonds
ggplot(data = diam, aes( x = x, y = price)) +
geom_point()
with(diam,cor.test(price,x,method = 'pearson'))
with(diam,cor.test(price,y,method = 'pearson'))
with(diam,cor.test(price,z,method = 'pearson'))
ggplot(data = diam, aes( x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0,80,2))
ggplot(data = diam, aes( x = carat, y = price)) +
geom_point() +
xlim (0,quantile(diam$carat,0.99)) +
ylim (0,quantile(diam$price,0.99))
diam$volume <- (diam$x * diam$y * diam$z)
ggplot(data = diam, aes( x = volume, y = price)) +
geom_point()
#diamond with 0 volume
library(plyr)
library(dplyr)
count(filter(diam,volume==0))
with(filter(diam,!(volume == 0|volume >=800)), cor.test(price,volume))
ggplot(data = filter(diam,!(volume == 0|volume >=800)),
aes( x = volume, y = price)) +
geom_point(alpha= 1/100) +
geom_smooth(method = 'lm')
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p1 <- ggplot(data = diamonds_mp_by_clarity,
aes(x = clarity,y = mean_price, fill = clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color,
aes(x = color,y = mean_price, fill = color)) +
geom_bar(stat = "identity")
library(gridExtra)
grid.arrange(p1,p2,nrow = 1)
setwd("~/Google Drive/Gits/DataScience/Data Analysis with R/Lesson8")
diamond <-diamond
library(ggplot2)
diamond <-diamond
library(ggplot2)
diamonds <-diamonds
ggplot(data = diamonds,aes(price)) +
geom_histogram()
ggplot(data = diamonds,aes(price)) +
geom_histogram(aes(color = color))
ggplot(data = diamonds,aes(price)) +
geom_histogram(aes(color = cut))
ggplot(data = diamonds,aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap( ~ color)
ggplot(data = diamonds,aes(price)) +
geom_histogram(aes(fill = cut)) +
facet_wrap( ~ color)
ggplot(data = diamonds,aes(price,table)) +
geom_point(aes(pch = cut))
ggplot(data = diamonds,aes(price,table)) +
geom_point(aes(color = cut))
sumset(diamonds,cut=="ideal")
subset(diamonds,cut=="ideal")
summary(subset(diamonds,cut=="ideal"))
summary(subset(diamonds,cut=="ideal")$table)
View(diamonds)
filter(diamonds,cut = "Ideal")
filter(diamonds,cut == "Ideal")
summary(subset(diamonds,cut=="Ideal")$table)
table(diamonds$cut)
summary(subset(diamonds,cut=="Premium")$table)
min(subset(diamonds,cut=="Premium")$table
)
min(subset(diamonds,cut=="Ideal")$table)
table(subset(diamonds,cut=="Premium")$table)
names(iris)
ggplot(data = iris, aes( x =SepalLength, y = SepalWidth ) + geom_point(aes(color = Species)
names(iris)
ggplot(data = iris, aes( x =Sepal.Length, y = Sepal.Width ) + geom_point(aes(color = Species)
names(iris)
ggplot(data = iris, aes( x =Sepal.Length, y = Sepal.Width )) + geom_point(aes(color = Species)
names(iris)
ggplot(data = iris, aes( x =Sepal.Length, y = Sepal.Width )) + geom_point(aes(color = Species))
